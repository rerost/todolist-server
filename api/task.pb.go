// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

package api_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Task struct {
	TaskId               int64                `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=createdAt" json:"createdAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_db6b23874f3dd6a0, []int{0}
}
func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (dst *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(dst, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetTaskId() int64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *Task) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Task) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type ListTasksRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTasksRequest) Reset()         { *m = ListTasksRequest{} }
func (m *ListTasksRequest) String() string { return proto.CompactTextString(m) }
func (*ListTasksRequest) ProtoMessage()    {}
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_db6b23874f3dd6a0, []int{1}
}
func (m *ListTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTasksRequest.Unmarshal(m, b)
}
func (m *ListTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTasksRequest.Marshal(b, m, deterministic)
}
func (dst *ListTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTasksRequest.Merge(dst, src)
}
func (m *ListTasksRequest) XXX_Size() int {
	return xxx_messageInfo_ListTasksRequest.Size(m)
}
func (m *ListTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTasksRequest proto.InternalMessageInfo

type ListTasksResponse struct {
	Tasks                []*Task  `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTasksResponse) Reset()         { *m = ListTasksResponse{} }
func (m *ListTasksResponse) String() string { return proto.CompactTextString(m) }
func (*ListTasksResponse) ProtoMessage()    {}
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_db6b23874f3dd6a0, []int{2}
}
func (m *ListTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTasksResponse.Unmarshal(m, b)
}
func (m *ListTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTasksResponse.Marshal(b, m, deterministic)
}
func (dst *ListTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTasksResponse.Merge(dst, src)
}
func (m *ListTasksResponse) XXX_Size() int {
	return xxx_messageInfo_ListTasksResponse.Size(m)
}
func (m *ListTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTasksResponse proto.InternalMessageInfo

func (m *ListTasksResponse) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type GetTaskRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskRequest) Reset()         { *m = GetTaskRequest{} }
func (m *GetTaskRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskRequest) ProtoMessage()    {}
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_db6b23874f3dd6a0, []int{3}
}
func (m *GetTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskRequest.Unmarshal(m, b)
}
func (m *GetTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskRequest.Marshal(b, m, deterministic)
}
func (dst *GetTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskRequest.Merge(dst, src)
}
func (m *GetTaskRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskRequest.Size(m)
}
func (m *GetTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskRequest proto.InternalMessageInfo

func (m *GetTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type CreateTaskRequest struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskRequest) Reset()         { *m = CreateTaskRequest{} }
func (m *CreateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskRequest) ProtoMessage()    {}
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_db6b23874f3dd6a0, []int{4}
}
func (m *CreateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskRequest.Unmarshal(m, b)
}
func (m *CreateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskRequest.Marshal(b, m, deterministic)
}
func (dst *CreateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskRequest.Merge(dst, src)
}
func (m *CreateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskRequest.Size(m)
}
func (m *CreateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskRequest proto.InternalMessageInfo

func (m *CreateTaskRequest) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type UpdateTaskRequest struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskRequest) Reset()         { *m = UpdateTaskRequest{} }
func (m *UpdateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskRequest) ProtoMessage()    {}
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_db6b23874f3dd6a0, []int{5}
}
func (m *UpdateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskRequest.Unmarshal(m, b)
}
func (m *UpdateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskRequest.Merge(dst, src)
}
func (m *UpdateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskRequest.Size(m)
}
func (m *UpdateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskRequest proto.InternalMessageInfo

func (m *UpdateTaskRequest) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type DeleteTaskRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTaskRequest) Reset()         { *m = DeleteTaskRequest{} }
func (m *DeleteTaskRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskRequest) ProtoMessage()    {}
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_db6b23874f3dd6a0, []int{6}
}
func (m *DeleteTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskRequest.Unmarshal(m, b)
}
func (m *DeleteTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskRequest.Merge(dst, src)
}
func (m *DeleteTaskRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskRequest.Size(m)
}
func (m *DeleteTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskRequest proto.InternalMessageInfo

func (m *DeleteTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func init() {
	proto.RegisterType((*Task)(nil), "com.github.rerost.todolist_server.api.Task")
	proto.RegisterType((*ListTasksRequest)(nil), "com.github.rerost.todolist_server.api.ListTasksRequest")
	proto.RegisterType((*ListTasksResponse)(nil), "com.github.rerost.todolist_server.api.ListTasksResponse")
	proto.RegisterType((*GetTaskRequest)(nil), "com.github.rerost.todolist_server.api.GetTaskRequest")
	proto.RegisterType((*CreateTaskRequest)(nil), "com.github.rerost.todolist_server.api.CreateTaskRequest")
	proto.RegisterType((*UpdateTaskRequest)(nil), "com.github.rerost.todolist_server.api.UpdateTaskRequest")
	proto.RegisterType((*DeleteTaskRequest)(nil), "com.github.rerost.todolist_server.api.DeleteTaskRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TaskService service

type TaskServiceClient interface {
	ListTasks(ctx context.Context, in *ListTasksRequest, opts ...grpc.CallOption) (*ListTasksResponse, error)
	GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*Task, error)
	CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*Task, error)
	UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*Task, error)
	DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) ListTasks(ctx context.Context, in *ListTasksRequest, opts ...grpc.CallOption) (*ListTasksResponse, error) {
	out := new(ListTasksResponse)
	err := grpc.Invoke(ctx, "/com.github.rerost.todolist_server.api.TaskService/ListTasks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := grpc.Invoke(ctx, "/com.github.rerost.todolist_server.api.TaskService/GetTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := grpc.Invoke(ctx, "/com.github.rerost.todolist_server.api.TaskService/CreateTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := grpc.Invoke(ctx, "/com.github.rerost.todolist_server.api.TaskService/UpdateTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/com.github.rerost.todolist_server.api.TaskService/DeleteTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TaskService service

type TaskServiceServer interface {
	ListTasks(context.Context, *ListTasksRequest) (*ListTasksResponse, error)
	GetTask(context.Context, *GetTaskRequest) (*Task, error)
	CreateTask(context.Context, *CreateTaskRequest) (*Task, error)
	UpdateTask(context.Context, *UpdateTaskRequest) (*Task, error)
	DeleteTask(context.Context, *DeleteTaskRequest) (*empty.Empty, error)
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_ListTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).ListTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.rerost.todolist_server.api.TaskService/ListTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).ListTasks(ctx, req.(*ListTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.rerost.todolist_server.api.TaskService/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetTask(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.rerost.todolist_server.api.TaskService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).CreateTask(ctx, req.(*CreateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.rerost.todolist_server.api.TaskService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).UpdateTask(ctx, req.(*UpdateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.rerost.todolist_server.api.TaskService/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).DeleteTask(ctx, req.(*DeleteTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.github.rerost.todolist_server.api.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListTasks",
			Handler:    _TaskService_ListTasks_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _TaskService_GetTask_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _TaskService_CreateTask_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _TaskService_UpdateTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _TaskService_DeleteTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task.proto",
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_task_db6b23874f3dd6a0) }

var fileDescriptor_task_db6b23874f3dd6a0 = []byte{
	// 486 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcb, 0x8a, 0x13, 0x41,
	0x14, 0xa5, 0x26, 0x93, 0xcc, 0xe4, 0x06, 0x86, 0x49, 0xe1, 0xa3, 0x69, 0x15, 0x43, 0x8b, 0x10,
	0x47, 0xa9, 0x86, 0x88, 0x38, 0xcc, 0x46, 0xc6, 0x07, 0x22, 0xb8, 0x6a, 0xa3, 0x0b, 0x37, 0xa1,
	0x93, 0xbe, 0xc6, 0x62, 0x92, 0x54, 0xd9, 0x75, 0x33, 0x28, 0xe2, 0xc6, 0x85, 0xee, 0xdc, 0xb8,
	0xf1, 0x8b, 0xfc, 0x01, 0x7f, 0xc1, 0x0f, 0x91, 0xaa, 0xee, 0x36, 0x8f, 0x46, 0xe8, 0x06, 0x97,
	0xd5, 0xf7, 0x71, 0xce, 0x3d, 0xe7, 0xd0, 0x00, 0x14, 0x9b, 0x33, 0xa1, 0x53, 0x45, 0x8a, 0xdf,
	0x9c, 0xa8, 0xb9, 0x98, 0x4a, 0x7a, 0xbb, 0x1c, 0x8b, 0x14, 0x53, 0x65, 0x48, 0x90, 0x4a, 0xd4,
	0x4c, 0x1a, 0x1a, 0x19, 0x4c, 0xcf, 0x31, 0x15, 0xb1, 0x96, 0xfe, 0xd5, 0xa9, 0x52, 0xd3, 0x19,
	0x86, 0xb1, 0x96, 0x61, 0xbc, 0x58, 0x28, 0x8a, 0x49, 0xaa, 0x85, 0xc9, 0x96, 0xf8, 0x57, 0xf2,
	0xaa, 0x7b, 0x8d, 0x97, 0x6f, 0x42, 0x9c, 0x6b, 0xfa, 0x90, 0x17, 0xaf, 0x6f, 0x17, 0x49, 0xce,
	0xd1, 0x50, 0x3c, 0xd7, 0x59, 0x43, 0xa0, 0x60, 0x77, 0x18, 0x9b, 0x33, 0x7e, 0x19, 0xf6, 0x2c,
	0xb1, 0x91, 0x4c, 0x3c, 0xd6, 0x63, 0xfd, 0x46, 0xd4, 0xb2, 0xcf, 0x67, 0x09, 0xbf, 0x00, 0x4d,
	0x92, 0x34, 0x43, 0x6f, 0xa7, 0xc7, 0xfa, 0xed, 0x28, 0x7b, 0xf0, 0x63, 0x68, 0x4f, 0x52, 0x8c,
	0x09, 0x93, 0x53, 0xf2, 0x1a, 0x3d, 0xd6, 0xef, 0x0c, 0x7c, 0x91, 0x61, 0x89, 0x02, 0x4b, 0x0c,
	0x0b, 0xac, 0x68, 0xd5, 0x1c, 0x70, 0x38, 0x7c, 0x2e, 0x0d, 0x59, 0x50, 0x13, 0xe1, 0xbb, 0x25,
	0x1a, 0x0a, 0x5e, 0x41, 0x77, 0xed, 0x9b, 0xd1, 0x6a, 0x61, 0x90, 0x9f, 0x42, 0xd3, 0x52, 0x30,
	0x1e, 0xeb, 0x35, 0xfa, 0x9d, 0xc1, 0x6d, 0x51, 0x49, 0x2c, 0x61, 0x97, 0x44, 0xd9, 0x64, 0x70,
	0x0b, 0x0e, 0x9e, 0xa2, 0x5b, 0x9b, 0x23, 0x6d, 0x9f, 0xd9, 0x2e, 0xce, 0x0c, 0x86, 0xd0, 0x7d,
	0xe4, 0x38, 0xae, 0x77, 0x3f, 0x80, 0x5d, 0x5b, 0x76, 0xad, 0x35, 0x19, 0xb8, 0x41, 0xbb, 0xf5,
	0xa5, 0x4e, 0xfe, 0xf7, 0xd6, 0x3b, 0xd0, 0x7d, 0x8c, 0x33, 0xdc, 0xdc, 0xfa, 0xaf, 0xcb, 0x06,
	0x3f, 0x9b, 0xd0, 0xb1, 0x8d, 0x2f, 0x30, 0x3d, 0x97, 0x13, 0xe4, 0xdf, 0x18, 0xb4, 0xff, 0xaa,
	0xcd, 0xef, 0x57, 0x84, 0xdf, 0xf6, 0xcc, 0x3f, 0xae, 0x3f, 0x98, 0x19, 0x1b, 0x1c, 0x7c, 0xfe,
	0xf5, 0xfb, 0xfb, 0xce, 0x3e, 0x6f, 0x85, 0xce, 0x25, 0xfe, 0x95, 0xc1, 0x5e, 0x6e, 0x13, 0xbf,
	0x57, 0x71, 0xeb, 0xa6, 0xad, 0x7e, 0x1d, 0x11, 0x03, 0xcf, 0xe1, 0x73, 0x7e, 0x98, 0xe1, 0x87,
	0x1f, 0x73, 0xdd, 0x3e, 0xf1, 0x2f, 0x0c, 0x60, 0x95, 0x02, 0x5e, 0xf5, 0xc4, 0x52, 0x70, 0xea,
	0xf1, 0xe9, 0x3a, 0x3e, 0x9d, 0x20, 0xd7, 0xe3, 0x84, 0x1d, 0xf1, 0x1f, 0x0c, 0x60, 0x15, 0x9c,
	0xca, 0x44, 0x4a, 0x59, 0xab, 0x47, 0xe4, 0x86, 0x23, 0x72, 0x6d, 0x70, 0x71, 0x5d, 0x18, 0x51,
	0xa8, 0x73, 0xe2, 0xc2, 0xc7, 0xdf, 0x03, 0xac, 0xc2, 0x57, 0x99, 0x59, 0x29, 0xaf, 0xfe, 0xa5,
	0xd2, 0xef, 0xe2, 0x89, 0xfd, 0x6f, 0x15, 0xee, 0x1c, 0x95, 0xdc, 0x79, 0xb8, 0xff, 0xba, 0x15,
	0x6b, 0x39, 0xd2, 0xe3, 0x71, 0xcb, 0xcd, 0xdc, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0xfe, 0xb4,
	0xde, 0x91, 0x4c, 0x05, 0x00, 0x00,
}
